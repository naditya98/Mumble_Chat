{"version":3,"sources":["components/Header.js","components/Message.js","firebase.js","components/Room.js","StateProvider.js","components/Rooms.js","components/Chat.js","reducer.js","components/favicon.png","components/Login.js","components/Footer.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","id","className","href","Message","date","message","user","checkUser","photoURL","email","image","divRef","useRef","useEffect","current","scrollIntoView","behavior","ref","src","alt","title","Date","timestamp","toDate","moment","isSameOrAfter","subtract","fromNow","calendar","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Room","name","addNewRoom","useState","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","onClick","roomName","prompt","add","to","split","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Rooms","rooms","setRooms","cx","room","Chat","setMessage","useParams","setRoomName","displayName","onChange","event","target","placeholder","type","variant","color","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","setEmail","password","setPassword","logo","width","e","signInWithEmailAndPassword","then","console","log","catch","error","alert","createUserWithEmailAndPassword","signInWithPopup","result","Footer","rel","App","onAuthStateChanged","authUser","btnToggle","document","querySelector","hamburger","theme","localStorage","getItem","classList","style","padding","remove","addEventListener","contains","setItem","clear","toggle","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","waitingServiceWorker","waiting","postMessage"],"mappings":"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","file":"static/js/main.ad4cf1ad.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nfunction Header() {\n\n    return (\n        <div id=\"navbar\" className=\"navbar\">\n            <div className=\"hamburger\">\n                <div className=\"line-1\"></div>\n                <div className=\"line-2\"></div>\n                <div className=\"line-3\"></div>\n            </div>\n            <h1 className=\"logo\">\n                <a href=\"/\">MUMBLE</a>\n            </h1>\n            {/* {user ? <div className=\"button\"><button onClick={handleAuthenticaton} className=\"logout\">Logout</button></div>: \"\"} */}\n            <div id=\"modeToggle\" className=\"modeToggle\"><i className=\"far fa-moon\"></i></div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useRef, useEffect, } from \"react\";\nimport moment from 'moment'\nimport \"./Message.css\";\n\nconst Message = ({ message, user }) => {\n\tconst checkUser = (user.photoURL || `https://avatars.dicebear.com/api/gridy/${user.email}.svg`) === message.image;\n\tconst divRef = useRef(null);\n\n\tfunction convertTime(date){\n\t\tif(moment(date).isSameOrAfter(moment().subtract(1,'days'))) {\n\t\t\treturn moment(date).fromNow();\n\t\t}\n\t\treturn moment(date).calendar();\n\t}\n\n\tuseEffect(() => {\n\t\tdivRef.current.scrollIntoView({ behavior: 'smooth' });\n\t}, []);\n\n\treturn (\n\t\t<div ref={divRef} className={`message ${checkUser ? \"messageUser\" : \"\"}`}>\n\t\t\t<div className={checkUser ? \"userCard\" : \"otherCard\"}>\n\t\t\t\t<img className=\"avatar\" src={message.image} alt={message.user} title={message.user}/>\n\t\t\t\t<div className=\"messageText\">\n\t\t\t\t {message.message}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"messageHeader\"> {convertTime(new Date(message.timestamp?.toDate()))}</div>\n\t\t</div>\n\t);\n}\nexport default Message;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCykLI8fjtlMnz4ENaNkbpJMiW6jHL5MY8\",\n    authDomain: \"final-8ffe0.firebaseapp.com\",\n    databaseURL: \"https://final-8ffe0-default-rtdb.firebaseio.com\",\n    projectId: \"final-8ffe0\",\n    storageBucket: \"final-8ffe0.appspot.com\",\n    messagingSenderId: \"321294050630\",\n    appId: \"1:321294050630:web:dd4c5914296a439649f147\",\n    measurementId: \"G-N4RCXJC7E3\",\n});\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, provider }","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { db } from '../firebase';\nimport './Room.css'\n\n\nfunction Room({id, name, addNewRoom}) {\n    const [messages, setMessages] = useState('');\n\n    useEffect(() => {\n        if (id) {\n            db.collection('rooms')\n            .doc(id).collection('messages')\n            .orderBy('timestamp', 'desc')\n            .onSnapshot(snapshot => \n                setMessages(snapshot.docs.map((doc) => \n                    doc.data()\n                ))\n            );\n        }\n        \n    }, [id])\n    \n    const createRoom = () => {\n        const roomName = prompt(\"Enter a name for the room\");\n        if (roomName) {\n            db.collection('rooms').add({\n                name: roomName,\n            })\n        }\n    }\n\n    return !addNewRoom ? (\n        <Link to={`/chat/${id}`}>\n            <div className=\"room\">\n                <img className=\"avatar\" src={`https://avatars.dicebear.com/api/gridy/${id}.svg`} alt={name}/> \n                <div className=\"roomInfo\">\n                    <h2>{name}</h2>\n                    <p>{messages[0] ? `${(messages[0].user).split(' ')[0]}: ` : \"\"}{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n    ) : (\n      <div className=\"room\" onClick={createRoom}>\n          <h4>Add New Room  <i className=\"fas fa-plus-circle\"></i> </h4>\n      </div>\n    )\n}\n\nexport default Room","import React, {createContext, useContext, useReducer} from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import React, { useState, useEffect } from 'react'\nimport './Rooms.css'\nimport {db, auth} from '../firebase'\nimport Room from './Room';\nimport cx from \"classnames\";\nimport { useStateValue } from '../StateProvider';\n\nfunction Rooms() {\n    const [rooms, setRooms] = useState([]);\n    // eslint-disable-next-line\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(() => {\n        db.collection('rooms').orderBy('name', 'asc').onSnapshot(snapshot => (\n\t\t\tsetRooms(snapshot.docs.map( doc => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        )));\n    }, [])\n\n    const handleAuthenticaton = () => {\n\t\tif (user) {\n\t\t\tauth.signOut();\n\t\t}\n\t};\n\n    return (\n        <div id=\"rooms\" className={cx(\"rooms\",\"close\")}>\n            <div className=\"menu\">\n                    <a href=\"https://mummblly.herokuapp.com/\"> ❤(̶◉͛‿◉̶)❤Random Chat</a>\n            </div>\n            <Room addNewRoom />\n            {rooms.map(room => (\n                <Room key={room.id} id={room.id} name={room.data.name}/>\n            ))}\n            <div className=\"placeholder\"></div>\n        </div>\n    )\n}\n\nexport default Rooms","import React, { useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom'\nimport Message from './Message';\nimport Rooms from './Rooms'\nimport { db } from \"../firebase\";\nimport firebase from 'firebase/app';\nimport { useStateValue } from \"../StateProvider\";\nimport './Chat.css'\n\nfunction Chat() {\n    const [message, setMessage] =  useState('');\n\tconst [messages, setMessages] = useState([{}]);\n\tconst { id } = useParams();\n\tconst [roomName, setRoomName] = useState('');\n\t// eslint-disable-next-line\n\tconst [{user}, dispatch] = useStateValue();\n\n\tuseEffect(() => {\n\t\tif(id){\n\t\t\tdb.collection('rooms').doc(id).onSnapshot(snapshot => (\n\t\t\t\tsetRoomName(snapshot.data().name)\n\t\t\t))\n\n\t\t\tdb.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot =>(\n\t\t\t\tsetMessages(snapshot.docs.map(doc => doc.data()))\n\t\t\t))\n\t\t}\n\t},[id])\n\t\n\tconst sendMessage = (event) => {\n\t\tevent.preventDefault();\n\t\tif(user.displayName){\n\t\t\tdb.collection('rooms').doc(id).collection('messages').add(\n\t\t\t{\n\t\t\t\tmessage: message,\n\t\t\t\tuser: user.displayName,\n\t\t\t\timage: user.photoURL,\n\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t});\n\t\t}else{\n\t\t\tdb.collection('rooms').doc(id).collection('messages').add(\n\t\t\t{\n\t\t\t\tmessage: message,\n\t\t\t\tuser: user.email,\n\t\t\t\timage: `https://avatars.dicebear.com/api/gridy/${user.email}.svg`,\n\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t});\n\t\t}\n\t\tsetMessage('');\n\t}\n\n    return (\n\t\t<div className=\"content\">\n\t\t\t<Rooms/>\n\t\t\t{id ? \n\t\t\t<div className=\"chat\">\n\t\t\t\t<h2 className=\"welcome\">Hi ! Welcome <img className=\"avatar\" src={user.photoURL || `https://avatars.dicebear.com/api/gridy/${user.email}.svg`} alt={user.displayName} /> {user.displayName} to {roomName}</h2>\n\t\t\t\t<div className=\"messages\">\n\t\t\t\t\t{messages.map((message, id) => (\n\t\t\t\t\t\t<Message key={id} user={user} message={message}/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<form className='form'>\n\t\t\t\t\t<div className=\"formcontrol\">\n\t\t\t\t\t\t<input className=\"formmessage\" value={message} onChange={event => setMessage(event.target.value)} placeholder=\"Type a message...\"/>\n\t\t\t\t\t\t{message ? <button className=\"formbutton\" type='submit' variant=\"contained\" color=\"primary\" onClick={sendMessage}><i className=\"fas fa-paper-plane\"></i></button>: \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t:\n\t\t\t\"\"}\n\t\t</div>\n    )\n}\n\nexport default Chat\n","export const initialState = {\n    user: null,\n};\n\nexport const actionTypes = {\n    SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case actionTypes.SET_USER:\n            return{\n                ...state,\n                user: action.user\n            }\n        default: \n            return state;\n    }\n}\n\nexport default reducer;","export default __webpack_public_path__ + \"static/media/favicon.ccb4de0b.png\";","import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { auth, provider } from \"../firebase\";\nimport { useStateValue } from \"../StateProvider\";\nimport { actionTypes } from \"../reducer\";\nimport logo from './favicon.png'\n\nfunction Login() {\n\t// eslint-disable-next-line\n\tconst [state, dispatch] = useStateValue();\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\n\tconst signIn = () => {\n\t\tauth.signInWithPopup(provider)\n\t\t\t.then((result) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: actionTypes.SET_USER,\n\t\t\t\t\tuser: result.user,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// alert(error.message);\n\t\t\t});\n\t};\n\n\tconst signInEmail = (e) => {\n\t\te.preventDefault();\n\n\t\tauth.signInWithEmailAndPassword(email, password)\n\t\t\t.then((auth) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: actionTypes.SET_USER,\n\t\t\t\t\tuser: auth.user,\n\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconsole.log(auth);\n\t\t\t})\n\t\t\t.catch((error) => alert(error.message));\n\t};\n\n\tconst register = (e) => {\n\t\te.preventDefault();\n\n\t\tauth.createUserWithEmailAndPassword(email, password)\n\t\t\t.then((auth) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: actionTypes.SET_USER,\n\t\t\t\t\tuser: auth.user,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => alert(error.message));\n\t};\n\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"loginContainer\">\n\t\t\t\t<img src={logo} width=\"150\" alt=\"logo\" />\n\t\t\t\t<h1>Sign in to Message Me</h1>\n\n\t\t\t\t<form>\n\t\t\t\t\t<h5>E-mail</h5>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<h5>Password</h5>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={signInEmail}\n\t\t\t\t\t\tclassName=\"loginSignInButton\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<button className=\"register loginRegisterButton\" onClick={register}>\n\t\t\t\t\tSign Up\n\t\t\t\t</button>\n\t\t\t\t<h5>❤ OR ❤</h5>\n\t\t\t\t<button onClick={signIn}>\n\t\t\t\t\t<i className=\"fab fa-google\"></i> Sign In with Google\n\t\t\t\t</button>\n\t\t\t\t<p>\n\t\t\t\t\tDisclaimer: This is an unmonitored messaging app and is created for demostration purposes only. So if you want to use this please use it carefully .Don't spam anything bad here. ❤Happy Mumbly❤\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React from 'react'\nimport './Footer.css'\n\nfunction Footer() {\n    return (\n        <footer id=\"footer\" className=\"footer\">            \n            <p>\n                Made with ❤ by :-\n                <a\n                    href=\"https://github.com/naditya98\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                > Aditya ❤ Ankita ❤ Anubhav </a>\n                <br/>\n\n            </p>\n        </footer>\n    );\n};\n\nexport default Footer\n","import React, { useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport Login from \"./components/Login\";\nimport Footer from \"./components/Footer\";\nimport {\n\tBrowserRouter as Router,\n\tRedirect,\n\tRoute,\n\tSwitch,\n} from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n\tconst [{ user }, dispatch] = useStateValue();\n\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged((authUser) => {\n\t\t\tif (authUser) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"SET_USER\",\n\t\t\t\t\tuser: authUser,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"SET_USER\",\n\t\t\t\t\tuser: null,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst btnToggle = document.querySelector(\"#modeToggle i\");\n\t\tconst hamburger = document.querySelector(\".hamburger\");\n\t\tconst rooms = document.querySelector(\"#rooms\");\n\t\tconst theme = localStorage.getItem(\"theme\");\n\n\t\tif (theme === \"light\") {\n\t\t\tbtnToggle.classList.add(\"fa-sun\");\n\t\t\tbtnToggle.style.padding = \"4px 3.8px\";\n\t\t\tbtnToggle.classList.remove(\"fa-moon\");\n\t\t\tdocument.querySelector(\"body\").classList.add(theme);\n\t\t}\n\n\t\thamburger.addEventListener(\"click\", () => {\n\t\t\tif (rooms.classList.contains(\"open\")) {\n\t\t\t\trooms.classList.remove(\"open\");\n\t\t\t\trooms.classList.add(\"close\");\n\t\t\t} else {\n\t\t\t\trooms.classList.remove(\"close\");\n\t\t\t\trooms.classList.add(\"open\");\n\t\t\t}\n\t\t});\n\n\t\tbtnToggle.addEventListener(\"click\", () => {\n\t\t\tif (btnToggle.classList.contains(\"fa-moon\")) {\n\t\t\t\tbtnToggle.classList.add(\"fa-sun\");\n\t\t\t\tbtnToggle.style.padding = \"4px 3.8px\";\n\t\t\t\tbtnToggle.classList.remove(\"fa-moon\");\n\t\t\t\tlocalStorage.setItem(\"theme\", \"light\");\n\t\t\t} else {\n\t\t\t\tbtnToggle.classList.add(\"fa-moon\");\n\t\t\t\tbtnToggle.classList.remove(\"fa-sun\");\n\t\t\t\tbtnToggle.style.padding = \"4px 5px\";\n\t\t\t\tlocalStorage.clear();\n\t\t\t}\n\t\t\tdocument.querySelector(\"body\").classList.toggle(\"light\");\n\t\t});\n\t}, [user]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{!user ? (\n\t\t\t\t<>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Login />\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div className=\"appBody\">\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t\t\t<Footer/>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route exact path=\"/chat/:id\">\n\t\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t\t\t<Footer/>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route>\n\t\t\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport {StateProvider} from './StateProvider';\nimport reducer, {initialState} from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register({\n\tonUpdate: registration => {\n\t  const waitingServiceWorker = registration.waiting;\n\t  if (waitingServiceWorker) {\n\t\twaitingServiceWorker.addEventListener(\"statechange\", event => {\n\t\t  if (event.target.state === \"activated\") {\n        alert(\"New Verison Found. Refressing...\");\n        window.location.reload()\n\t\t  }\n\t\t})\n\t\twaitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" })\n\t  }\n\t}\n})"],"sourceRoot":""}