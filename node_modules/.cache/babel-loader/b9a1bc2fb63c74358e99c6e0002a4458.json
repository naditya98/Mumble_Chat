{"ast":null,"code":"var _jsxFileName = \"/Users/adityanayak/Desktop/mumble-Chat/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Message from './Message';\nimport Rooms from './Rooms';\nimport { db } from \"../firebase\";\nimport firebase from 'firebase/app';\nimport { useStateValue } from \"../StateProvider\";\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([{}]);\n  const {\n    id\n  } = useParams();\n  const [roomName, setRoomName] = useState(''); // eslint-disable-next-line\n\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (id) {\n      db.collection('rooms').doc(id).onSnapshot(snapshot => setRoomName(snapshot.data().name));\n      db.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [id]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (user.displayName) {\n      db.collection('rooms').doc(id).collection('messages').add({\n        message: message,\n        user: user.displayName,\n        image: user.photoURL,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    } else {\n      db.collection('rooms').doc(id).collection('messages').add({\n        message: message,\n        user: user.email,\n        image: `https://avatars.dicebear.com/api/gridy/${user.email}.svg`,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Rooms, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"welcome\",\n        children: [\"Hi ! Welcome \", /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"avatar\",\n          src: user.photoURL || `https://avatars.dicebear.com/api/gridy/${user.email}.svg`,\n          alt: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 42\n        }, this), \" \", user.displayName, \" to \", roomName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, id) => /*#__PURE__*/_jsxDEV(Message, {\n          user: user,\n          message: message\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formcontrol\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"formmessage\",\n            value: message,\n            onChange: event => setMessage(event.target.value),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), message ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"formbutton\",\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: sendMessage,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 121\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 18\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Chat, \"TB92zlCh7xFgbvq1MCknxEl5gn4=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/adityanayak/Desktop/mumble-Chat/src/components/Chat.js"],"names":["React","useState","useEffect","useParams","Message","Rooms","db","firebase","useStateValue","Chat","message","setMessage","messages","setMessages","id","roomName","setRoomName","user","dispatch","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","sendMessage","event","preventDefault","displayName","add","image","photoURL","timestamp","firestore","FieldValue","serverTimestamp","email","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom'\nimport Message from './Message';\nimport Rooms from './Rooms'\nimport { db } from \"../firebase\";\nimport firebase from 'firebase/app';\nimport { useStateValue } from \"../StateProvider\";\nimport './Chat.css'\n\nfunction Chat() {\n    const [message, setMessage] =  useState('');\n\tconst [messages, setMessages] = useState([{}]);\n\tconst { id } = useParams();\n\tconst [roomName, setRoomName] = useState('');\n\t// eslint-disable-next-line\n\tconst [{user}, dispatch] = useStateValue();\n\n\tuseEffect(() => {\n\t\tif(id){\n\t\t\tdb.collection('rooms').doc(id).onSnapshot(snapshot => (\n\t\t\t\tsetRoomName(snapshot.data().name)\n\t\t\t))\n\n\t\t\tdb.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot =>(\n\t\t\t\tsetMessages(snapshot.docs.map(doc => doc.data()))\n\t\t\t))\n\t\t}\n\t},[id])\n\t\n\tconst sendMessage = (event) => {\n\t\tevent.preventDefault();\n\t\tif(user.displayName){\n\t\t\tdb.collection('rooms').doc(id).collection('messages').add(\n\t\t\t{\n\t\t\t\tmessage: message,\n\t\t\t\tuser: user.displayName,\n\t\t\t\timage: user.photoURL,\n\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t});\n\t\t}else{\n\t\t\tdb.collection('rooms').doc(id).collection('messages').add(\n\t\t\t{\n\t\t\t\tmessage: message,\n\t\t\t\tuser: user.email,\n\t\t\t\timage: `https://avatars.dicebear.com/api/gridy/${user.email}.svg`,\n\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t});\n\t\t}\n\t\tsetMessage('');\n\t}\n\n    return (\n\t\t<div className=\"content\">\n\t\t\t<Rooms/>\n\t\t\t{id ? \n\t\t\t<div className=\"chat\">\n\t\t\t\t<h2 className=\"welcome\">Hi ! Welcome <img className=\"avatar\" src={user.photoURL || `https://avatars.dicebear.com/api/gridy/${user.email}.svg`} alt={user.displayName} /> {user.displayName} to {roomName}</h2>\n\t\t\t\t<div className=\"messages\">\n\t\t\t\t\t{messages.map((message, id) => (\n\t\t\t\t\t\t<Message key={id} user={user} message={message}/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<form className='form'>\n\t\t\t\t\t<div className=\"formcontrol\">\n\t\t\t\t\t\t<input className=\"formmessage\" value={message} onChange={event => setMessage(event.target.value)} placeholder=\"Type a message...\"/>\n\t\t\t\t\t\t{message ? <button className=\"formbutton\" type='submit' variant=\"contained\" color=\"primary\" onClick={sendMessage}><i className=\"fas fa-paper-plane\"></i></button>: \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t:\n\t\t\t\"\"}\n\t\t</div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}